version: '0.1'
services:
  # Web Server Service
  nginx:
    restart: unless-stopped
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./apps:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/includes/:/etc/nginx/includes/
    depends_on:
      - app
      - mysqldb
    networks:
      - local_network
  # Application Service
  app:
    restart: unless-stopped
    container_name: app
    build: 
      context: ./docker
      dockerfile: Dockerfile
    volumes:
      - ./apps:/var/www
    ports:
      - "9000:9000"
    working_dir: /var/www
    networks:
      - local_network

  mysqldb:
    restart: always
    container_name: mysql
    image: mysql:8.0
    volumes:
      - mysqldata:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1
      MYSQL_USER: user
    networks:
      - local_network
  cache:
    restart: unless-stopped
    container_name: redis
    image: redis:latest
    networks:
      - local_network

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports: 
      - 8081:8080
    networks:
      - local_network
  pgdb:
    image: postgres:latest
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5434:5434"
    volumes:
      - pgsqldata:/var/lib/postgresql/data
    networks:
      - local_network
networks:
  local_network:
    driver: bridge
    name: local_network

volumes:
  mysqldata:
  pgsqldata:


